package layout

import (
	"admin-panel/cmd/enum"
	"admin-panel/utils"
	"context"
	"strconv"
)

templ sidebar() {
	<div class="sidebar sidebar-fixed border-end" id="sidebar">
		<div class="sidebar-header border-bottom">
			<div class="sidebar-brand">Ellemme</div>
		</div>
		<ul class="sidebar-nav">
			<li class="nav-item">
				<a href="/" class={ "nav-link", templ.KV("active", isActive(ctx, enum.Home)) }>
					<i class="nav-icon cil-speedometer"></i> Riepilogo
				</a>
			</li>
			<li class="nav-item">
				<a class={ "nav-link", templ.KV("active", isActive(ctx, enum.InvoiceList)) } href="/invoice">
					<i class="nav-icon cil-list"></i> Fatture
				</a>
			</li>
			<li class="nav-item">
				<a class={ "nav-link", templ.KV("active", isActive(ctx, enum.CustomerList)) } href="/customer">
					<i class="nav-icon cil-user"></i> Clienti
				</a>
			</li>
		</ul>
		<div class="sidebar-footer border-top d-flex">
			<button class="sidebar-toggler" type="button"></button>
		</div>
	</div>
}

func isActive(ctx context.Context, page enum.Page) bool {
	return utils.GetPage(ctx) == string(page)
}

func isSubItemActive(ctx context.Context, items []dropDownItemParams) bool {
	for _, item := range items {
		if item.isHeader {
			continue
		}
		if utils.GetPage(ctx) == string(item.page) {
			return true
		}
	}
	return false
}

templ navItem(url string, page enum.Page) {
	<li class={ "nav-item", templ.KV("active", isActive(ctx, page)) }>
		<a class={ "nav-link" } href={ templ.SafeURL(url) }>
			{ children... }
		</a>
	</li>
}

type dropDownItemParams struct {
	isHeader bool
	url      string
	text     string
	page     enum.Page
}

templ dropDownItem(params dropDownItemParams) {
	if (params.isHeader) {
		<h6 class="collapse-header">{ params.text }:</h6>
	} else {
		<a class={ "collapse-item", templ.KV("active", isActive(ctx, params.page)) } href={ templ.SafeURL(params.url) }>{ params.text }</a>
	}
}

type dropDownListParams struct {
	items  []dropDownItemParams
	target string
}

templ dropDownList(params dropDownListParams) {
	<li class={ "nav-item", templ.KV("active", isSubItemActive(ctx, params.items)) }>
		<a
			class={ "nav-link", templ.KV("collapsed", !isSubItemActive(ctx, params.items)), templ.KV("show", isSubItemActive(ctx, params.items)) }
			href="#"
			data-toggle="collapse"
			data-target={ "#" + params.target }
			aria-expanded={ strconv.FormatBool(isSubItemActive(ctx, params.items)) }
			aria-controls={ params.target }
		>
			{ children... }
		</a>
		<div
			id={ params.target }
			class={ "collapse", templ.KV("show", isSubItemActive(ctx, params.items)) }
			data-parent="#accordionSidebar"
		>
			<div class="bg-white py-2 collapse-inner rounded">
				for _, item := range params.items {
					@dropDownItem(item)
				}
			</div>
		</div>
	</li>
}

templ divider(addCssClass string) {
	<hr class={ "sidebar-divider", addCssClass }/>
}

templ heading(text string) {
	<div class="sidebar-heading">
		{ text }
	</div>
}
