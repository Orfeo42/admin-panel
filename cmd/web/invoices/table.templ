package invoices

import (
	"admin-panel/internal/database"
	"admin-panel/utils"
)

type InvoiceTableParams struct {
	Items        []database.Invoice
	ShowCustomer bool
}

templ InvoiceTable(params InvoiceTableParams) {
	<table class={ "table", "table-bordered", "table-striped", "table-hover", templ.KV("hideFirstColumn", !params.ShowCustomer) } id="dataTable">
		<thead>
			<tr>
				<th scope="col" style="text-wrap: nowrap;">Cliente</th>
				<th scope="col" style="text-wrap: nowrap;">Numero</th>
				<th scope="col" style="text-wrap: nowrap;">Data Fattura</th>
				<th scope="col" style="text-wrap: nowrap; text-align: right;">Importo Fattura</th>
				<th scope="col" style="text-wrap: nowrap;">Data Pagamento</th>
				<th scope="col" style="text-wrap: nowrap; text-align: right;">Importo Pagato</th>
				<th scope="col" style="text-wrap: nowrap;">Pagato</th>
				<th scope="col" style="text-wrap: nowrap;"></th>
				<th scope="col" style="text-wrap: nowrap;"></th>
			</tr>
		</thead>
		<tbody id="data" hx-target="closest tr" hx-swap="outerHTML">
			@InvoiceTableRows(params.Items)
		</tbody>
	</table>
}

templ InvoiceTableRows(items []database.Invoice) {
	for index, item := range items {
		if (index == len(items)-1) {
			@invoiceTableRowLast(item)
		} else {
			@InvoiceTableRow(item)
		}
	}
}

templ InvoiceTableRow(item database.Invoice) {
	<tr>
		@invoiceColumns(item)
	</tr>
}

templ invoiceTableRowLast(item database.Invoice) {
	<tr
		hx-get={ "/invoice/filter?page=" + utils.GetNextPageNumber(ctx) }
		hx-trigger="revealed"
		hx-swap="afterend"
		hx-include="previous form"
	>
		@invoiceColumns(item)
	</tr>
}

templ invoiceColumns(item database.Invoice) {
	<th scope="row">{ item.Customer.Name }</th>
	<td style="text-align: right;">{ item.Number }</td>
	<td style="text-align: right;">{ utils.FormatTimePtrToTable(item.Date) }</td>
	<td style="text-align: right;">{ utils.AmountIntegerToString(item.Amount) } €</td>
	<td style="text-align: right;">{ utils.FormatTimePtrToTable(item.PaymentDate) }</td>
	<td style="text-align: right;">{ utils.AmountIntegerToString(item.PaidAmount) } €</td>
	<td style="text-align: center;">
		@invoicePayButton(utils.UintToString(item.ID), item.Amount-item.PaidAmount)
	</td>
	<td style="text-align: center">
		@invoiceEditButton(utils.UintToString(item.ID))
	</td>
	<td style="text-align: center">
		@invoiceDeleteButton(utils.UintToString(item.ID))
	</td>
}
