package invoices

import (
	"admin-panel/cmd/web/components"
	"admin-panel/internal/database"
	"admin-panel/utils"
)

type InvoiceFilterParams struct {
	Filter       database.InvoiceFilter
	ShowCustomer bool
}

templ InvoiceFilterForm(params InvoiceFilterParams) {
	<form hx-get="/invoice/filter" hx-target="#data" hx-swap="innerHTML">
		if (!params.ShowCustomer) {
			<input type="hidden" name="customer" value={ utils.UintToString(*params.Filter.CustomerID) }/>
		}
		<div class="row g-2">
			if (params.ShowCustomer) {
				<div class="col-md-6 mb-3">
					@components.CustomerSearchInput(components.CustomerSearchInputParams{
						Id:            "filter",
						CustomerValue: "",
						CustomerName:  "",
						ShowLabel:     true,
					})
				</div>
			}
			<div class="col-md-3 mb-3">
				<div class="input-group">
					<label for="number" class="input-group-text">Numero Fattura</label>
					<input type="text" class="form-control" id="number" name="number" aria-label="numero fattura" value={ utils.FormatStringToForm(params.Filter.Number) }/>
				</div>
			</div>
			<div class="col-md-3 mb-3">
				<div class="input-group">
					<label for="isPaid" class="input-group-text">Stato Pagamento:</label>
					<select class="form-select" name="isPaid" id="isPaid">
						<option value="">Tutte le fatture</option>
						if params.Filter.IsPaid != nil && *params.Filter.IsPaid {
							<option value="true" selected>Pagate</option>
						} else {
							<option value="true">Pagate</option>
						}
						if params.Filter.IsPaid != nil && !*params.Filter.IsPaid {
							<option value="false" selected>Non pagati</option>
						} else {
							<option value="false">Non pagati</option>
						}
					</select>
				</div>
			</div>
			<div class="col-md-3 mb-3">
				<div class="input-group">
					<label for="dateFrom" class="input-group-text">Da Data Fattura</label>
					<input type="date" class="form-control" id="dateFrom" name="dateFrom" aria-label="Da Data Fattura" value={ utils.FormatTimePtrToForm(params.Filter.DateFrom) }/>
				</div>
			</div>
			<div class="col-md-3 mb-3">
				<div class="input-group">
					<label for="dateTo" class="input-group-text">A Data Fattura</label>
					<input type="date" class="form-control" id="dateTo" name="dateTo" aria-label="A Data Fattura" value={ utils.FormatTimePtrToForm(params.Filter.DateTo) }/>
				</div>
			</div>
			<div class="col-md-3 mb-3">
				<div class="input-group">
					<label class="input-group-text" for="amountFrom">Da Importo Fattura</label>
					<input type="number" step=".01" class="form-control" id="amountFrom" name="amountFrom" aria-label="Da Importo Fattura" value={ utils.FormatIntToAmount(params.Filter.AmountFrom) }/>
				</div>
			</div>
			<div class="col-md-3 mb-3">
				<div class="input-group">
					<label class="input-group-text" for="amountTo">A Importo Fattura</label>
					<input type="number" step=".01" class="form-control" id="amountTo" name="amountTo" aria-label="A Importo Fattura" value={ utils.FormatIntToAmount(params.Filter.AmountTo) }/>
				</div>
			</div>
			<div class="col-md-3 mb-3">
				<div class="input-group">
					<label class="input-group-text" for="paymentDateFrom">Da Data Pagamento</label>
					<input type="date" class="form-control" id="paymentDateFrom" name="paymentDateFrom" aria-label="Da Data Pagamento" value={ utils.FormatTimePtrToForm(params.Filter.PaymentDateFrom) }/>
				</div>
			</div>
			<div class="col-md-3 mb-3">
				<div class="input-group">
					<label class="input-group-text" for="paymentDateTo">A Data Pagamento</label>
					<input type="date" class="form-control" id="paymentDateTo" name="paymentDateTo" aria-label="A Data Pagamento" value={ utils.FormatTimePtrToForm(params.Filter.PaymentDateTo) }/>
				</div>
			</div>
			<div class="col-md-3 mb-3">
				<div class="input-group">
					<label class="input-group-text" for="paidAmountFrom">Da Importo Pagato</label>
					<input type="number" step=".01" class="form-control" id="paidAmountFrom" name="paidAmountFrom" aria-label="Da Importo Pagato" value={ utils.FormatIntToAmount(params.Filter.PaidAmountFrom) }/>
					<span class="input-group-text">€</span>
				</div>
			</div>
			<div class="col-md-3 mb-3">
				<div class="input-group">
					<label class="input-group-text" for="paidAmountTo">A Importo Pagato</label>
					<input type="number" step=".01" class="form-control" id="paidAmountTo" name="paidAmountTo" aria-label="A Importo Pagato" value={ utils.FormatIntToAmount(params.Filter.PaidAmountTo) }/>
					<span class="input-group-text">€</span>
				</div>
			</div>
			<div class="col-12">
				<div class="d-grid gap-2 d-md-flex justify-content-md-end">
					<button type="submit" class="btn btn-outline-info"><i class="cil-search"></i></button>
				</div>
			</div>
		</div>
	</form>
	//}
}
